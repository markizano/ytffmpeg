1
00:00:00.000 --> 00:00:02.120
So let's talk about cloud operations,

2
00:00:02.480 --> 00:00:04.660
a history. When I first started off

3
00:00:04.660 --> 00:00:05.740
in software engineering

4
00:00:06.860 --> 00:00:08.640
and started learning about the different

5
00:00:08.640 --> 00:00:10.360
languages, that was about the time

6
00:00:10.360 --> 00:00:10.940
I learned

7
00:00:10.940 --> 00:00:12.980
that software engineering and programming

8
00:00:12.980 --> 00:00:15.380
languages and software solutions themselves

9
00:00:15.920 --> 00:00:18.640
can be full-blown religions. It surprises

10
00:00:18.640 --> 00:00:20.820
me how many people follow a language and,

11
00:00:20.940 --> 00:00:22.600
you know, praise to it as if

12
00:00:22.600 --> 00:00:24.080
it was a deity, or at least

13
00:00:24.080 --> 00:00:24.960
it sounds like it sometimes,

14
00:00:25.680 --> 00:00:28.500
and this is a thing in software.

15
00:00:29.100 --> 00:00:31.060
The C/C++ developers are very snobbish,

16
00:00:31.440 --> 00:00:33.020
the Java developers have their

17
00:00:33.020 --> 00:00:35.360
own personality, the JavaScript developers

18
00:00:35.360 --> 00:00:37.200
are all attuned to a specific frequency,

19
00:00:37.880 --> 00:00:39.740
and the PHP developers, well, you

20
00:00:39.740 --> 00:00:41.120
know, PHP is just brain fog, so

21
00:00:41.120 --> 00:00:42.340
unless you actually absolutely

22
00:00:42.340 --> 00:00:43.480
love the language, you try to do

23
00:00:43.480 --> 00:00:46.080
everything you can not to interact

24
00:00:46.080 --> 00:00:47.860
or do anything with PHP anymore

25
00:00:47.860 --> 00:00:51.340
these days. But that's not me talking,

26
00:00:51.560 --> 00:00:53.060
that's, you know, things I've heard

27
00:00:53.060 --> 00:00:54.780
about how people treat

28
00:00:54.780 --> 00:00:57.720
things. It's kind of sad. I like

29
00:00:57.720 --> 00:00:59.360
to think of language as a tool,

30
00:00:59.580 --> 00:01:00.660
you know, there's a reason

31
00:01:00.660 --> 00:01:03.480
I know so many, and it's because

32
00:01:03.480 --> 00:01:04.880
it just happened to be the right

33
00:01:04.880 --> 00:01:06.120
tool for the job for whatever it

34
00:01:06.120 --> 00:01:08.500
was I was doing, and I tend

35
00:01:08.500 --> 00:01:09.940
to think of things from that perspective.

36
00:01:10.640 --> 00:01:12.260
Now, as I evolved from

37
00:01:12.260 --> 00:01:15.700
going into software, I go from software,

38
00:01:15.820 --> 00:01:18.700
I went into systems, the connotation

39
00:01:18.700 --> 00:01:19.560
was, well, I'm a

40
00:01:19.560 --> 00:01:20.680
software guy, I just want to write

41
00:01:20.680 --> 00:01:22.220
my software, I just want to write

42
00:01:22.220 --> 00:01:23.160
code all day long, I don't

43
00:01:23.160 --> 00:01:23.960
want to have anything to do with

44
00:01:23.960 --> 00:01:25.040
the server, starting and stopping

45
00:01:25.040 --> 00:01:26.340
services, managing any of

46
00:01:26.340 --> 00:01:28.700
that stuff, so I just took it

47
00:01:28.700 --> 00:01:30.400
upon myself and just started managing

48
00:01:30.400 --> 00:01:32.060
them. Well, in the midst of

49
00:01:32.060 --> 00:01:33.580
managing it, you know, back in the

50
00:01:33.580 --> 00:01:35.780
day, you used to SSH into the

51
00:01:35.780 --> 00:01:36.840
box, we used to call it,

52
00:01:37.880 --> 00:01:39.740
or the server, so that you could

53
00:01:39.740 --> 00:01:41.740
start, stop the services, add users,

54
00:01:42.000 --> 00:01:42.620
create accounts,

55
00:01:42.740 --> 00:01:44.960
make sure that the programs were not

56
00:01:44.960 --> 00:01:47.340
running as root, setting up environments

57
00:01:47.340 --> 00:01:48.060
so the developers

58
00:01:48.060 --> 00:01:49.520
could log in and they could perform

59
00:01:49.520 --> 00:01:51.940
some testing of sorts in a collaborative

60
00:01:51.940 --> 00:01:53.060
environment that kind

61
00:01:53.060 --> 00:01:54.840
of sort of represents what production

62
00:01:54.840 --> 00:01:56.760
is, and I just kind of started

63
00:01:56.760 --> 00:01:58.280
doing that, like everybody

64
00:01:58.280 --> 00:01:59.620
was just working off of their local

65
00:01:59.620 --> 00:02:01.680
workstation, packaging the code up,

66
00:02:01.780 --> 00:02:03.240
and you had to publish that

67
00:02:03.240 --> 00:02:05.880
whole website, you know, out to some

68
00:02:05.880 --> 00:02:08.320
environment for some nebulous QA team

69
00:02:08.320 --> 00:02:09.040
to do some testing.

70
00:02:09.780 --> 00:02:11.380
Well, being able to step in between

71
00:02:11.380 --> 00:02:13.080
the different arenas allowed me the

72
00:02:13.080 --> 00:02:14.760
freedoms to be able to see

73
00:02:14.760 --> 00:02:17.200
what that world looked like, and having

74
00:02:17.200 --> 00:02:18.660
played that developer background,

75
00:02:18.780 --> 00:02:19.540
I was able to bring

76
00:02:19.540 --> 00:02:21.020
that with me into the systems part,

77
00:02:21.300 --> 00:02:23.300
and that's where I just started automating

78
00:02:23.300 --> 00:02:24.220
stuff. I mean,

79
00:02:24.260 --> 00:02:25.960
if it was software that needed to

80
00:02:25.960 --> 00:02:27.840
get deployed out there, or packages

81
00:02:27.840 --> 00:02:28.940
that needed to be compiled,

82
00:02:29.380 --> 00:02:30.960
because, you know, that was another

83
00:02:30.960 --> 00:02:32.480
thing that really blew my mind, software

84
00:02:32.480 --> 00:02:33.280
making software,

85
00:02:33.440 --> 00:02:34.860
by taking the algebraic English that

86
00:02:34.860 --> 00:02:37.420
we write and converting that into

87
00:02:37.420 --> 00:02:38.280
the bytecode that the

88
00:02:38.280 --> 00:02:40.640
computer uses in order to manipulate

89
00:02:40.640 --> 00:02:42.660
those statements that you create,

90
00:02:43.020 --> 00:02:43.540
which is why you

91
00:02:43.540 --> 00:02:46.020
sometimes see that weird code stuff,

92
00:02:46.320 --> 00:02:47.560
yeah, it basically gets converted

93
00:02:47.560 --> 00:02:48.380
into things that the

94
00:02:48.380 --> 00:02:52.360
computer can use. So, now that you've

95
00:02:52.360 --> 00:02:53.600
got your software, you've packaged

96
00:02:53.600 --> 00:02:54.500
it up, and you've put

97
00:02:54.500 --> 00:02:57.180
it into some environment, and next

98
00:02:57.180 --> 00:02:58.580
is being able to test it. Now,

99
00:02:58.660 --> 00:02:59.760
there's different ways that you

100
00:02:59.760 --> 00:03:01.800
can go about testing it. There's unit

101
00:03:01.800 --> 00:03:03.580
testing, which is being able to write

102
00:03:03.580 --> 00:03:04.380
code that writes

103
00:03:04.380 --> 00:03:06.300
code, and it's important you do that,

104
00:03:06.340 --> 00:03:07.660
because it's a great way to CYA,

105
00:03:08.140 --> 00:03:09.240
and being able to describe

106
00:03:09.240 --> 00:03:11.440
what you tested, how you tested it,

107
00:03:11.700 --> 00:03:12.940
and why you tested it that way,

108
00:03:12.980 --> 00:03:13.820
through documentation,

109
00:03:13.820 --> 00:03:16.320
examples, and actually using the code.

110
00:03:16.460 --> 00:03:17.880
It also allows other developers to

111
00:03:17.880 --> 00:03:18.980
see how your API

112
00:03:18.980 --> 00:03:20.620
interfaces, whatever code you write,

113
00:03:20.960 --> 00:03:22.980
would be consumed by them if you

114
00:03:22.980 --> 00:03:23.740
were working on different

115
00:03:23.740 --> 00:03:27.600
modules. Now, if you don't want to

116
00:03:27.600 --> 00:03:29.200
go that far low, because, you know,

117
00:03:29.260 --> 00:03:30.540
trying to test one plus

118
00:03:30.540 --> 00:03:32.220
one equals two is pretty redundant,

119
00:03:32.600 --> 00:03:34.380
you want to do some functional testing,

120
00:03:34.460 --> 00:03:35.360
where you'd mock your

121
00:03:35.360 --> 00:03:37.240
environment up with like a stock setup

122
00:03:37.240 --> 00:03:39.260
that says, well, you know, we have

123
00:03:39.260 --> 00:03:40.280
an e-commerce website,

124
00:03:40.280 --> 00:03:41.280
I want to have a shopping cart

125
00:03:41.280 --> 00:03:42.940
set up, and, you know, let's set

126
00:03:42.940 --> 00:03:44.100
up a test case where the shopping

127
00:03:44.100 --> 00:03:45.920
cart is empty, product gets added,

128
00:03:46.160 --> 00:03:47.280
and we want to verify that the

129
00:03:47.280 --> 00:03:48.360
product is actually added to the

130
00:03:48.360 --> 00:03:49.900
shopping cart, so whenever you go

131
00:03:49.900 --> 00:03:51.460
to the checkout page, the total will

132
00:03:51.460 --> 00:03:52.260
show up, and all that fun

133
00:03:52.260 --> 00:03:54.380
stuff, and how it works. Well, you

134
00:03:54.380 --> 00:03:55.760
can set that up inside of an

135
00:03:55.760 --> 00:03:56.920
automated testing environment,

136
00:03:57.420 --> 00:03:58.740
and, you know, it's part of my

137
00:03:58.740 --> 00:04:01.280
job to help set that stage up

138
00:04:01.280 --> 00:04:03.300
as well, so the QA team can now

139
00:04:03.300 --> 00:04:05.100
click buttons and go through the actual

140
00:04:05.100 --> 00:04:06.840
website itself to make sure that it

141
00:04:06.840 --> 00:04:07.240
did what it was

142
00:04:07.240 --> 00:04:10.340
supposed to do. Well, that got tedious,

143
00:04:10.820 --> 00:04:12.180
and so now people came up with

144
00:04:12.180 --> 00:04:13.320
a solution called Selenium.

145
00:04:13.720 --> 00:04:15.080
Selenium is where it loads up a

146
00:04:15.080 --> 00:04:16.760
virtual browser, or it loads up a

147
00:04:16.760 --> 00:04:17.780
virtual machine with a browser

148
00:04:17.780 --> 00:04:19.300
environment already installed in it,

149
00:04:19.560 --> 00:04:21.020
or you can have it installed as

150
00:04:21.020 --> 00:04:22.240
a browser extension to your

151
00:04:22.240 --> 00:04:24.420
existing browser. Either way, whatever

152
00:04:24.420 --> 00:04:25.900
it is, we mock up some kind

153
00:04:25.900 --> 00:04:26.720
of browser environment,

154
00:04:27.160 --> 00:04:29.520
and then it allows you to programmatically

155
00:04:29.520 --> 00:04:31.600
describe what you want the page to

156
00:04:31.600 --> 00:04:32.160
look like,

157
00:04:32.160 --> 00:04:33.740
to say, if I click on the

158
00:04:33.740 --> 00:04:35.780
login screen, does the login page

159
00:04:35.780 --> 00:04:37.240
actually show? Is this element

160
00:04:37.240 --> 00:04:38.840
actually rendered? What if I type

161
00:04:38.840 --> 00:04:40.560
this text into this field? How will

162
00:04:40.560 --> 00:04:41.880
it respond to that? What will

163
00:04:41.880 --> 00:04:44.420
the HTML look like after the form

164
00:04:44.420 --> 00:04:45.740
has been submitted back to the server?

165
00:04:46.120 --> 00:04:46.840
What's the response

166
00:04:46.840 --> 00:04:47.980
look like coming back from the server?

167
00:04:48.080 --> 00:04:49.180
Can I inject that into the next

168
00:04:49.180 --> 00:04:50.640
page so that the fields

169
00:04:50.640 --> 00:04:52.940
populate with the, you know, the address,

170
00:04:53.060 --> 00:04:54.660
and the from, and the to, and

171
00:04:54.660 --> 00:04:55.680
whatever you're doing at

172
00:04:55.680 --> 00:04:57.660
the time for logins, and registrations,

173
00:04:57.760 --> 00:05:00.400
and such, and being able to manage

174
00:05:00.400 --> 00:05:01.260
and track your sessions

175
00:05:01.260 --> 00:05:03.660
over time, so if I, you know,

176
00:05:03.700 --> 00:05:04.940
would allow the browser to sit idle

177
00:05:04.940 --> 00:05:05.980
for 15 minutes or so,

178
00:05:06.400 --> 00:05:08.100
would my cookies and stuff be deleted

179
00:05:08.100 --> 00:05:10.280
off the server? You can automate all

180
00:05:10.280 --> 00:05:10.900
of this stuff,

181
00:05:11.420 --> 00:05:13.200
and it's just amazing how many tools

182
00:05:13.200 --> 00:05:16.220
and utilities are out there. The number

183
00:05:16.220 --> 00:05:18.300
of tools growing is just

184
00:05:18.920 --> 00:05:20.380
mind-boggling, and it's impossible

185
00:05:20.380 --> 00:05:21.520
to keep up with unless you're just

186
00:05:21.520 --> 00:05:22.840
immersed in it all day,

187
00:05:22.900 --> 00:05:25.940
every single day, and the problem

188
00:05:25.940 --> 00:05:27.520
with that is anytime you pick a

189
00:05:27.520 --> 00:05:29.000
tool or utility of sorts,

190
00:05:29.000 --> 00:05:30.280
it's got to come with its own

191
00:05:30.280 --> 00:05:32.000
packaging, its own product, its own

192
00:05:32.000 --> 00:05:33.020
service, its own pipeline,

193
00:05:33.120 --> 00:05:35.500
its own process, and if you're not

194
00:05:35.500 --> 00:05:37.280
careful, you can end up in a

195
00:05:37.280 --> 00:05:38.580
vendor lock-in situation

196
00:05:39.200 --> 00:05:41.220
where you can't change solutions later

197
00:05:41.220 --> 00:05:42.240
on down the line if you find

198
00:05:42.240 --> 00:05:43.000
out what you got doesn't

199
00:05:43.000 --> 00:05:45.120
fit your needs, because all your data

200
00:05:45.120 --> 00:05:46.220
is with them, and they don't provide

201
00:05:46.220 --> 00:05:47.180
a way to export

202
00:05:47.180 --> 00:05:49.240
your information. Thank you GDPR for

203
00:05:49.240 --> 00:05:50.700
making that possible, so now if somebody

204
00:05:50.700 --> 00:05:51.340
wants to go to another

205
00:05:51.340 --> 00:05:54.020
solution, they can, because that ended

206
00:05:54.020 --> 00:05:55.920
up becoming national law somewhere,

207
00:05:56.440 --> 00:05:57.300
and so if you want to be

208
00:05:57.300 --> 00:05:58.400
internationally supported, you have

209
00:05:58.400 --> 00:06:00.840
to support all the laws, so it

210
00:06:00.840 --> 00:06:01.720
just kind of sort of becomes

211
00:06:01.720 --> 00:06:03.780
this rat race of going down these

212
00:06:03.780 --> 00:06:04.880
rabbit holes, trying to figure out

213
00:06:04.880 --> 00:06:06.680
what works, and if it does,

214
00:06:06.780 --> 00:06:08.680
great, if it doesn't, crap, you just,

215
00:06:08.940 --> 00:06:09.940
did you waste all that time? I

216
00:06:09.940 --> 00:06:10.800
don't know, I learned a lot of

217
00:06:10.800 --> 00:06:12.520
stuff, but nobody else on the team

218
00:06:12.520 --> 00:06:15.600
gets to benefit from it. Great, so

219
00:06:15.600 --> 00:06:17.900
we've automated all this setup,

220
00:06:18.060 --> 00:06:19.580
and we've set these tools up, you

221
00:06:19.580 --> 00:06:22.320
know, Senor Jenkins and Travis are

222
00:06:22.320 --> 00:06:23.000
some of our

223
00:06:23.920 --> 00:06:26.320
most fond tools, because they allow

224
00:06:26.320 --> 00:06:29.500
us to create a visual diagram of

225
00:06:29.500 --> 00:06:30.600
what we want our systems,

226
00:06:30.740 --> 00:06:31.900
and our setup, and our processes to

227
00:06:31.900 --> 00:06:33.060
do, what we want them to look

228
00:06:33.060 --> 00:06:34.900
like, and they allow you to just

229
00:06:34.900 --> 00:06:36.400
fill out a bunch of forms that

230
00:06:36.400 --> 00:06:39.160
describe what you want your your build

231
00:06:39.160 --> 00:06:40.220
to look like, what you want

232
00:06:40.220 --> 00:06:41.700
your deployment to look like, how

233
00:06:41.700 --> 00:06:43.060
does your software actually get out

234
00:06:43.060 --> 00:06:44.320
into the environments and such,

235
00:06:46.280 --> 00:06:48.660
so great, now you've got an environment

236
00:06:48.660 --> 00:06:50.340
for the developers, an environment

237
00:06:50.340 --> 00:06:51.480
for the QA team,

238
00:06:51.480 --> 00:06:53.580
an environment for testing with the

239
00:06:53.580 --> 00:06:54.840
customer before you actually go to

240
00:06:54.840 --> 00:06:55.620
production, because

241
00:06:55.620 --> 00:06:57.220
the customer's always got to have

242
00:06:57.220 --> 00:06:58.580
something to say about what's going

243
00:06:58.580 --> 00:06:59.440
to happen to the software,

244
00:06:59.900 --> 00:07:01.500
and it doesn't matter if you have

245
00:07:01.500 --> 00:07:04.000
end user customers, or if you have

246
00:07:04.000 --> 00:07:05.020
internal customers,

247
00:07:05.020 --> 00:07:06.600
which happen to be the users of

248
00:07:06.600 --> 00:07:08.760
the software within the company itself,

249
00:07:09.260 --> 00:07:09.980
because sometimes

250
00:07:09.980 --> 00:07:11.540
the IT team is sitting up here

251
00:07:11.540 --> 00:07:14.360
writing the web forms and stuff for,

252
00:07:14.460 --> 00:07:16.480
you know, KFC, or Taco Bell,

253
00:07:16.480 --> 00:07:17.840
or somebody like that, like, you know,

254
00:07:17.860 --> 00:07:20.240
they're not, it depends on who's doing

255
00:07:20.240 --> 00:07:21.860
what, but sometimes

256
00:07:21.860 --> 00:07:23.520
people are actually writing software

257
00:07:23.520 --> 00:07:25.780
for themselves, and you're writing

258
00:07:25.780 --> 00:07:27.260
either the customer,

259
00:07:27.400 --> 00:07:29.020
the end user, or the stakeholders,

260
00:07:29.200 --> 00:07:30.640
and the other associates within the

261
00:07:30.640 --> 00:07:31.620
company itself, it's not

262
00:07:31.620 --> 00:07:33.440
always a company writing software

263
00:07:33.440 --> 00:07:34.960
for somebody else, you know, another

264
00:07:34.960 --> 00:07:36.460
end user, end customer,

265
00:07:38.800 --> 00:07:40.540
it's, there's all kinds of stuff out

266
00:07:40.540 --> 00:07:42.720
there, there's all kinds of models,

267
00:07:43.120 --> 00:07:43.800
and different kinds

268
00:07:43.800 --> 00:07:45.640
of setups, and then once you make

269
00:07:45.640 --> 00:07:48.020
it to production, you've got a slew

270
00:07:48.020 --> 00:07:48.700
of things, like

271
00:07:48.700 --> 00:07:50.300
being audited, so that you're PCI

272
00:07:50.300 --> 00:07:51.960
compliant, which is the pricing, what

273
00:07:51.960 --> 00:07:53.580
is it, the, I think it's the

274
00:07:53.580 --> 00:07:56.280
pricing, PCI compliance, I should

275
00:07:56.280 --> 00:07:57.740
know this, because, you know, we had

276
00:07:57.740 --> 00:07:58.680
to be PCI compliant

277
00:07:58.680 --> 00:08:00.900
for being able to accept credit card

278
00:08:00.900 --> 00:08:02.460
information, you have to be HIPAA

279
00:08:02.460 --> 00:08:03.120
compliant if you're going to

280
00:08:03.120 --> 00:08:04.380
be dealing with medical information,

281
00:08:04.460 --> 00:08:05.700
or anything that deals with patients,

282
00:08:06.440 --> 00:08:08.080
you're going to need to

283
00:08:08.080 --> 00:08:09.820
undergo certain audits, so that third

284
00:08:09.820 --> 00:08:11.140
parties will be able to say, yes,

285
00:08:11.160 --> 00:08:12.520
yes, yes, check a box, they are

286
00:08:12.520 --> 00:08:14.020
secure against X, Y, and Z, and

287
00:08:14.020 --> 00:08:15.520
keep up to date, and they got

288
00:08:15.520 --> 00:08:16.900
all their stuff, you know, audited,

289
00:08:17.500 --> 00:08:19.040
SOC2 compliance is a big deal,

290
00:08:20.020 --> 00:08:21.320
you have to make sure that you're

291
00:08:21.320 --> 00:08:22.320
properly regulated,

292
00:08:22.680 --> 00:08:24.140
you've got to have HA, so that

293
00:08:24.140 --> 00:08:25.900
your environments are, always have

294
00:08:25.900 --> 00:08:27.940
two, and do blue-green deployments,

295
00:08:28.000 --> 00:08:29.900
because taking production down for

296
00:08:29.900 --> 00:08:31.340
the sake of an outage is just

297
00:08:31.340 --> 00:08:32.800
unacceptable in any customer's eyes,

298
00:08:33.180 --> 00:08:33.900
they want it to be up and

299
00:08:33.900 --> 00:08:37.780
running all the time, so, yeah, and

300
00:08:37.780 --> 00:08:39.700
now you've also got, out of all of

301
00:08:39.700 --> 00:08:41.580
that, you've got solutions where people

302
00:08:41.580 --> 00:08:45.520
can have already, like, prepackaged

303
00:08:45.520 --> 00:08:46.980
stuff, like docker is a

304
00:08:46.980 --> 00:08:48.180
prepackaged something, but then that

305
00:08:48.180 --> 00:08:50.080
can expand into docker compose, that

306
00:08:50.080 --> 00:08:51.740
can expand into terraform,

307
00:08:51.980 --> 00:08:54.360
kubernetes, you know, there's these

308
00:08:54.360 --> 00:08:56.560
other ready-made solutions that enable

309
00:08:56.560 --> 00:08:57.980
you to basically

310
00:08:57.980 --> 00:08:59.900
describe things through some kind

311
00:08:59.900 --> 00:09:02.300
of description file, and then use

312
00:09:02.300 --> 00:09:03.320
that to publish it into the

313
00:09:03.320 --> 00:09:04.840
environment, or you got that one developer

314
00:09:04.840 --> 00:09:06.000
guy who's on the team who knows

315
00:09:06.000 --> 00:09:06.540
all the stuff, how

316
00:09:06.540 --> 00:09:07.740
it works and everything, and he's

317
00:09:07.740 --> 00:09:08.920
just writing the code himself from

318
00:09:08.920 --> 00:09:09.920
scratch, and just basically

319
00:09:09.920 --> 00:09:11.680
building the internal product, which

320
00:09:11.680 --> 00:09:13.220
is just kind of sort of rewriting

321
00:09:13.220 --> 00:09:14.240
Ansible, Puppet Chef,

322
00:09:14.660 --> 00:09:16.120
docker, and all them, just using,

323
00:09:16.260 --> 00:09:17.740
leveraging those tools and their APIs

324
00:09:17.740 --> 00:09:18.800
to be able to access

325
00:09:18.800 --> 00:09:20.300
the internals to get them to do

326
00:09:20.300 --> 00:09:21.360
what they need to do, I mean,

327
00:09:21.520 --> 00:09:23.580
just like cloud ops is huge,

328
00:09:25.600 --> 00:09:27.440
like there's a lot to cloud ops,

329
00:09:27.800 --> 00:09:29.080
and you think you can just be

330
00:09:29.080 --> 00:09:29.460
like, yeah,

331
00:09:29.500 --> 00:09:30.600
I'll just hire this guy off the

332
00:09:30.600 --> 00:09:32.220
internet that can do this job.

