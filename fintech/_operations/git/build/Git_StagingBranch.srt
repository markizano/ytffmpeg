1
00:00:00.000 --> 00:00:03.480
So let's talk about Git, the stupid

2
00:00:03.480 --> 00:00:04.340
content tracker.

3
00:00:05.200 --> 00:00:06.780
Recognize this from my last video?

4
00:00:07.160 --> 00:00:08.660
If you don't, go check him out,

5
00:00:08.900 --> 00:00:09.580
you need to go see him.

6
00:00:09.880 --> 00:00:11.600
If you do, you might notice some

7
00:00:11.600 --> 00:00:12.260
stuff's missing here.

8
00:00:12.400 --> 00:00:12.840
It's kinda cool.

9
00:00:13.560 --> 00:00:15.340
So you've done the commit, you've

10
00:00:15.340 --> 00:00:15.940
done the clone,

11
00:00:16.080 --> 00:00:17.140
you've done the push, you've done

12
00:00:17.140 --> 00:00:17.640
the pull,

13
00:00:17.800 --> 00:00:19.120
you've done all these things in Git,

14
00:00:19.260 --> 00:00:20.980
and now you understand just a little bit

15
00:00:20.980 --> 00:00:22.940
about how the SDLC process works.

16
00:00:23.400 --> 00:00:26.000
SDLC being the software development lifecycle.

17
00:00:26.500 --> 00:00:28.420
Next steps is what happens in QA?

18
00:00:28.420 --> 00:00:29.680
What happens when the engineers

19
00:00:29.680 --> 00:00:31.100
have done all their coding things,

20
00:00:31.280 --> 00:00:32.880
and what happens after that?

21
00:00:33.340 --> 00:00:35.200
Well, one of the reasons why this

22
00:00:35.200 --> 00:00:36.160
branching strategy

23
00:00:36.160 --> 00:00:38.320
works so well is because no matter

24
00:00:38.320 --> 00:00:39.980
how many ticket branches you have,

25
00:00:40.080 --> 00:00:42.020
no matter how many features you have,

26
00:00:42.540 --> 00:00:44.600
engineers and developers can constantly

27
00:00:44.600 --> 00:00:46.940
pull from the develop branch to pull

28
00:00:46.940 --> 00:00:47.680
those changes

29
00:00:47.680 --> 00:00:49.540
into the ticket or feature that you're

30
00:00:49.540 --> 00:00:50.160
working on,

31
00:00:50.440 --> 00:00:52.520
and can push those changes back up

32
00:00:52.520 --> 00:00:54.060
into the development stream,

33
00:00:54.420 --> 00:00:56.300
where the other QA members can come

34
00:00:56.300 --> 00:00:59.320
and snatch a version of that develop branch,

35
00:00:59.600 --> 00:01:01.140
deploy it into an environment,

36
00:01:01.600 --> 00:01:03.660
and either run automated testing about it,

37
00:01:03.720 --> 00:01:05.220
around it, like Selenium,

38
00:01:05.580 --> 00:01:07.620
or run manual testing around it,

39
00:01:07.680 --> 00:01:09.300
where they actually load up the web browser,

40
00:01:09.460 --> 00:01:10.460
or load up the environment,

41
00:01:11.020 --> 00:01:12.440
click the buttons and do the things

42
00:01:12.440 --> 00:01:12.960
in the code

43
00:01:12.960 --> 00:01:16.560
to make sure that whatever business requirements

44
00:01:16.560 --> 00:01:18.580
have been met effectively.

45
00:01:19.300 --> 00:01:21.120
So as we are progressing along,

46
00:01:21.240 --> 00:01:22.860
we've got all these tickets coming out,

47
00:01:22.980 --> 00:01:23.900
making these changes,

48
00:01:23.900 --> 00:01:28.740
and circling them back into the development environment,

49
00:01:28.980 --> 00:01:31.180
what ends up happening is you build yourself

50
00:01:31.180 --> 00:01:34.800
a really great cadence on how engineers

51
00:01:34.800 --> 00:01:36.760
will be able to contribute changes

52
00:01:36.760 --> 00:01:37.960
into the develop branch.

53
00:01:38.400 --> 00:01:40.520
QA members can take those changes out,

54
00:01:40.860 --> 00:01:42.720
create a snapshot out of it to say,

55
00:01:42.900 --> 00:01:45.220
okay, out of this business case,

56
00:01:45.580 --> 00:01:46.760
these things were tested,

57
00:01:47.080 --> 00:01:48.260
I verified this works,

58
00:01:48.440 --> 00:01:49.740
I verified this doesn't,

59
00:01:50.080 --> 00:01:51.800
here's another ticket if I need to say

60
00:01:51.800 --> 00:01:53.880
there's a bug in this particular setup,

61
00:01:54.100 --> 00:01:55.500
here's how you can go to correct it,

62
00:01:55.580 --> 00:01:57.040
this is what I did to reproduce it,

63
00:01:57.860 --> 00:01:59.400
and that's another video I need to make,

64
00:01:59.500 --> 00:01:59.920
but anyways.

65
00:02:00.940 --> 00:02:02.640
And so now that the engineers have

66
00:02:02.640 --> 00:02:03.060
had a chance

67
00:02:03.060 --> 00:02:04.360
to go through and make the changes,

68
00:02:04.520 --> 00:02:05.700
the QA team has had a chance

69
00:02:05.700 --> 00:02:06.200
to go through

70
00:02:06.200 --> 00:02:07.340
and do their testing,

71
00:02:07.760 --> 00:02:09.640
the next step is to promote to

72
00:02:09.640 --> 00:02:10.920
the staging branch,

73
00:02:11.100 --> 00:02:13.140
sometimes also called UAT for user

74
00:02:13.140 --> 00:02:14.120
acceptance testing.

75
00:02:14.440 --> 00:02:15.960
This is where we take everything

76
00:02:15.960 --> 00:02:17.720
that's been happening in the development line,

77
00:02:18.140 --> 00:02:20.800
and promote it up to an environment

78
00:02:20.800 --> 00:02:22.260
where we present it to the customer,

79
00:02:22.420 --> 00:02:23.100
and we say, hey,

80
00:02:23.480 --> 00:02:25.100
you gave us these business requirements,

81
00:02:25.360 --> 00:02:27.000
you said you wanted these changes done

82
00:02:27.000 --> 00:02:30.020
to your product, your site, your whatever,

83
00:02:30.820 --> 00:02:31.840
did we get it right?

84
00:02:32.580 --> 00:02:34.320
Did we manage the requirements?

85
00:02:34.620 --> 00:02:35.480
Did we handle everything?

86
00:02:35.640 --> 00:02:37.340
Can you go through your use cases?

87
00:02:37.820 --> 00:02:39.760
And did you get what you asked for?

88
00:02:40.220 --> 00:02:41.580
Customer then has an opportunity

89
00:02:41.580 --> 00:02:43.360
to approve of the changes,

90
00:02:43.440 --> 00:02:44.760
and at that point from staging,

91
00:02:44.960 --> 00:02:47.000
changes get promoted to the master branch,

92
00:02:47.420 --> 00:02:48.300
it releases cuts,

93
00:02:48.420 --> 00:02:49.820
we're gonna cover that in our next video,

94
00:02:51.780 --> 00:02:54.460
and if the customer declines and says,

95
00:02:54.640 --> 00:02:55.760
no, you got this wrong,

96
00:02:55.800 --> 00:02:56.500
you need to fix this,

97
00:02:56.580 --> 00:02:57.740
can you move this over two pixels,

98
00:02:58.160 --> 00:03:00.000
whatever, the customer can always

99
00:03:00.000 --> 00:03:00.540
kick back,

100
00:03:00.660 --> 00:03:01.800
and we just basically go through

101
00:03:01.800 --> 00:03:03.460
this entire process all over again

102
00:03:03.460 --> 00:03:06.780
to make sure that we complete the product

103
00:03:06.780 --> 00:03:09.260
to the customer specification as per

104
00:03:09.260 --> 00:03:09.820
their desires.

105
00:03:10.280 --> 00:03:11.700
So yeah, thanks to TikTok's short

106
00:03:11.700 --> 00:03:12.340
attention span,

107
00:03:12.420 --> 00:03:13.280
that's all you're gonna get.

108
00:03:13.440 --> 00:03:14.120
Wanna learn more?

109
00:03:14.300 --> 00:03:15.160
Gonna have to subscribe.

110
00:03:15.360 --> 00:03:16.540
Wanna see the next video and watch

111
00:03:16.540 --> 00:03:17.480
us cut a release?

112
00:03:18.000 --> 00:03:19.100
Gonna have to see the next video.

