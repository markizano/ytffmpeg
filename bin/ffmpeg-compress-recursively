#!/bin/bash

set -euo pipefail
shopt -s lastpipe

. common.sh

ffmpeg_ext=${ffmpeg_ext:-mp4}

test -v DEBUG && DEBUG=echo || DEBUG=''
test -v vf || vf=''

# Runs ffprobe in such a way that we get a consistent read on an mp4 file.
# Expected output:
#   $width $height $sar $dar
# Suitable for `read` command.
function ffprintstream () {
    ffprobe -hide_banner -v quiet -print_format json \
      -select_streams v:0 \
      -show_streams "$1" |
        jq -r '.streams[] | [ .width, .height, .tags.rotate // 0 ] | join(" ")'
}

mp4s=$@
if [ -z "$mp4s" ]; then
  mp4s=`shopt -s globstar; echo **/*.mp4`
fi

log_debug_msg "$mp4s"

for mp4 in $mp4s; do
    ffprintstream "$mp4" | while read width height rotate; do

        ffmpeg_opts="-map_metadata -1 -crf ${ffmpeg_crf:-24} -c:v ${ffmpeg_vcodec:-h264} -c:a ${ffmpeg_acodec:-aac}"
        if ! grep -qP '1920x1080|1080x1920|1920x888' <<<"${width}x${height}"; then
            log_info_msg "Skipping '$mp4' since it was ${width}x${height} rot ${rotate}."
            continue
        fi

        if [ "$rotate" == "90" ] || [ "$rotate" == "270" ]; then
            log_debug_msg "Vertical-form detected. Reversing height and width."
            scaled_height=1280
            scaled_width=720
        else
            log_debug_msg "Normal landscape view detected"
            scaled_width=1280
            scaled_height=720
        fi

        filter_complex="scale=${scaled_width}:${scaled_height},setsar=1:1"

        if [ "${width}x${height}" == "1920x888" ]; then
            filter_complex="pad=1080:1920:iw-ow/2:0,$filter_complex"
        fi
        # Allow passing custom filters into the ffmpeg.
        if [ -n "$vf" ]; then
            filter_complex="$filter_complex,$vf"
        fi

        dotfile="`dirname "$mp4"`/.`basename "$mp4" .mp4`.$ffmpeg_ext"
        outfile="${ffmpeg_outdir:-`dirname "$mp4"`}/`basename "$mp4" .mp4`.$ffmpeg_ext"
        # Make an atomic filesystem operation by writing to a secondary file first, then moving to
        # overwrite the results in case there's an error during encoding (like full disk).
        $DEBUG ffmpeg -i "$mp4" -vf "$filter_complex" $ffmpeg_opts "$dotfile"
        $DEBUG mv "$dotfile" "$outfile"
    done
done

